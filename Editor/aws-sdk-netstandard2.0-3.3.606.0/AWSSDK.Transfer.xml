<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.Transfer</name>
    </assembly>
    <members>
        <member name="T:Amazon.Transfer.AmazonTransferConfig">
            <summary>
            Configuration for accessing Amazon Transfer service
            </summary>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.Transfer.AmazonTransferConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.AmazonTransferConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.AmazonTransferConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.AmazonTransferException">
            <summary>
             Common exception for the Transfer service.
             </summary>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonTransferException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonTransferException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonTransferException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonTransferException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonTransferException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Transfer.Internal.AmazonTransferMetadata">
            <summary>
            Service metadata for  Amazon Transfer service
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Internal.AmazonTransferMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Internal.AmazonTransferMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.Transfer.AmazonTransferRequest">
            <summary>
            Base class for Transfer operation requests.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.CreateServerRequest">
            <summary>
            Container for the parameters to the CreateServer operation.
            Instantiates an autoscaling virtual server based on Secure File Transfer Protocol
            (SFTP) in AWS. When you make updates to your server or when you work with users, use
            the service-generated <code>ServerId</code> property that is assigned to the newly
            created server.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.EndpointDetails">
            <summary>
            Gets and sets the property EndpointDetails. 
            <para>
            The virtual private cloud (VPC) endpoint settings that you want to configure for your
            SFTP server. This parameter is required when you specify a value for the <code>EndpointType</code>
            parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.EndpointType">
            <summary>
            Gets and sets the property EndpointType. 
            <para>
            The type of VPC endpoint that you want your SFTP server to connect to. If you connect
            to a VPC endpoint, your SFTP server isn't accessible over the public internet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.HostKey">
            <summary>
            Gets and sets the property HostKey. 
            <para>
            The RSA private key as generated by the <code>ssh-keygen -N "" -f my-new-server-key</code>
            command.
            </para>
             <important> 
            <para>
            If you aren't planning to migrate existing users from an existing SFTP server to a
            new AWS SFTP server, don't update the host key. Accidentally changing a server's host
            key can be disruptive.
            </para>
             </important> 
            <para>
             For more information, see "https://docs.aws.amazon.com/transfer/latest/userguide/change-host-key"
            in the <i>AWS SFTP User Guide.</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.IdentityProviderDetails">
            <summary>
            Gets and sets the property IdentityProviderDetails. 
            <para>
            This parameter is required when the <code>IdentityProviderType</code> is set to <code>API_GATEWAY</code>.
            Accepts an array containing all of the information required to call a customer-supplied
            authentication API, including the API Gateway URL. This property is not required when
            the <code>IdentityProviderType</code> is set to <code>SERVICE_MANAGED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.IdentityProviderType">
            <summary>
            Gets and sets the property IdentityProviderType. 
            <para>
            Specifies the mode of authentication for the SFTP server. The default value is <code>SERVICE_MANAGED</code>,
            which allows you to store and access SFTP user credentials within the AWS Transfer
            for SFTP service. Use the <code>API_GATEWAY</code> value to integrate with an identity
            provider of your choosing. The <code>API_GATEWAY</code> setting requires you to provide
            an API Gateway endpoint URL to call for authentication using the <code>IdentityProviderDetails</code>
            parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.LoggingRole">
            <summary>
            Gets and sets the property LoggingRole. 
            <para>
            A value that allows the service to write your SFTP users' activity to your Amazon
            CloudWatch logs for monitoring and auditing purposes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pairs that can be used to group and search for servers.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.CreateServerResponse">
            <summary>
            This is the response object from the CreateServer operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerResponse.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            The service-assigned ID of the SFTP server that is created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.CreateUserRequest">
            <summary>
            Container for the parameters to the CreateUser operation.
            Creates a user and associates them with an existing Secure File Transfer Protocol
            (SFTP) server. You can only create and associate users with SFTP servers that have
            the <code>IdentityProviderType</code> set to <code>SERVICE_MANAGED</code>. Using parameters
            for <code>CreateUser</code>, you can specify the user name, set the home directory,
            store the user's public key, and assign the user's AWS Identity and Access Management
            (IAM) role. You can also optionally add a scope-down policy, and assign metadata with
            tags that can be used to group and search for users.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateUserRequest.HomeDirectory">
            <summary>
            Gets and sets the property HomeDirectory. 
            <para>
            The landing directory (folder) for a user when they log in to the server using their
            SFTP client. An example is <code>/home/<i>username</i> </code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateUserRequest.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            A scope-down policy for your user so you can use the same IAM role across multiple
            users. This policy scopes down user access to portions of their Amazon S3 bucket.
            Variables that you can use inside this policy include <code>${Transfer:UserName}</code>,
            <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.
            </para>
             <note> 
            <para>
            For scope-down policies, AWS Transfer for SFTP stores the policy as a JSON blob, instead
            of the Amazon Resource Name (ARN) of the policy. You save the policy as a JSON blob
            and pass it in the <code>Policy</code> argument.
            </para>
             
            <para>
            For an example of a scope-down policy, see "https://docs.aws.amazon.com/transfer/latest/userguide/users.html#users-policies-scope-down"&gt;Creating
            a Scope-Down Policy.
            </para>
             
            <para>
            For more information, see "https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html"
            in the <i>AWS Security Token Service API Reference</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateUserRequest.Role">
            <summary>
            Gets and sets the property Role. 
            <para>
            The IAM role that controls your user's access to your Amazon S3 bucket. The policies
            attached to this role will determine the level of access you want to provide your
            users when transferring files into and out of your Amazon S3 bucket or buckets. The
            IAM role should also contain a trust relationship that allows the SFTP server to access
            your resources when servicing your SFTP user's transfer requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateUserRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for an SFTP server instance. This is the specific
            SFTP server that you added your user to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateUserRequest.SshPublicKeyBody">
            <summary>
            Gets and sets the property SshPublicKeyBody. 
            <para>
            The public portion of the Secure Shell (SSH) key used to authenticate the user to
            the SFTP server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateUserRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pairs that can be used to group and search for users. Tags are metadata
            attached to users for any purpose.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateUserRequest.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            A unique string that identifies a user and is associated with a server as specified
            by the <code>ServerId</code>. This user name must be a minimum of 3 and a maximum
            of 32 characters long. The following are valid characters: a-z, A-Z, 0-9, underscore,
            and hyphen. The user name can't start with a hyphen.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.CreateUserResponse">
            <summary>
            This is the response object from the CreateUser operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateUserResponse.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            The ID of the SFTP server that the user is attached to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateUserResponse.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            A unique string that identifies a user account associated with an SFTP server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteServerRequest">
            <summary>
            Container for the parameters to the DeleteServer operation.
            Deletes the Secure File Transfer Protocol (SFTP) server that you specify.
            
             
            <para>
            No response returns from this operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteServerRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A unique system-assigned identifier for an SFTP server instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteServerResponse">
            <summary>
            This is the response object from the DeleteServer operation.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteSshPublicKeyRequest">
            <summary>
            Container for the parameters to the DeleteSshPublicKey operation.
            Deletes a user's Secure Shell (SSH) public key.
            
             
            <para>
            No response is returned from this operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteSshPublicKeyRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server
            instance that has the user assigned to it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteSshPublicKeyRequest.SshPublicKeyId">
            <summary>
            Gets and sets the property SshPublicKeyId. 
            <para>
            A unique identifier used to reference your user's specific SSH key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteSshPublicKeyRequest.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            A unique string that identifies a user whose public key is being deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteSshPublicKeyResponse">
            <summary>
            This is the response object from the DeleteSshPublicKey operation.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteUserRequest">
            <summary>
            Container for the parameters to the DeleteUser operation.
            Deletes the user belonging to the server you specify.
            
             
            <para>
            No response returns from this operation.
            </para>
             <note> 
            <para>
            When you delete a user from a server, the user's information is lost.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteUserRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for an SFTP server instance that has the user
            assigned to it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteUserRequest.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            A unique string that identifies a user that is being deleted from the server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteUserResponse">
            <summary>
            This is the response object from the DeleteUser operation.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribedServer">
            <summary>
            Describes the properties of the server that was specified. Information returned includes
            the following: the server Amazon Resource Name (ARN), the authentication configuration
            and type, the logging role, the server ID and state, and assigned tags or metadata.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Specifies the unique Amazon Resource Name (ARN) for the server to be described.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.EndpointDetails">
            <summary>
            Gets and sets the property EndpointDetails. 
            <para>
            The virtual private cloud (VPC) endpoint settings that you configured for your SFTP
            server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.EndpointType">
            <summary>
            Gets and sets the property EndpointType. 
            <para>
            The type of endpoint that your SFTP server is connected to. If your SFTP server is
            connected to a VPC endpoint, your server isn't accessible over the public internet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.HostKeyFingerprint">
            <summary>
            Gets and sets the property HostKeyFingerprint. 
            <para>
            This value contains the message-digest algorithm (MD5) hash of the server's host key.
            This value is equivalent to the output of the <code>ssh-keygen -l -E md5 -f my-new-server-key</code>
            command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.IdentityProviderDetails">
            <summary>
            Gets and sets the property IdentityProviderDetails. 
            <para>
            Specifies information to call a customer-supplied authentication API. This field is
            not populated when the <code>IdentityProviderType</code> of the server is <code>SERVICE_MANAGED</code>&gt;.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.IdentityProviderType">
            <summary>
            Gets and sets the property IdentityProviderType. 
            <para>
            This property defines the mode of authentication method enabled for this service.
            A value of <code>SERVICE_MANAGED</code> means that you are using this server to store
            and access SFTP user credentials within the service. A value of <code>API_GATEWAY</code>
            indicates that you have integrated an API Gateway endpoint that will be invoked for
            authenticating your user into the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.LoggingRole">
            <summary>
            Gets and sets the property LoggingRole. 
            <para>
            This property is an AWS Identity and Access Management (IAM) entity that allows the
            server to turn on Amazon CloudWatch logging for Amazon S3 events. When set, user activity
            can be viewed in your CloudWatch logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            This property is a unique system-assigned identifier for the SFTP server that you
            instantiate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The condition of the SFTP server for the server that was described. A value of <code>ONLINE</code>
            indicates that the server can accept jobs and transfer files. A <code>State</code>
            value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.
            </para>
             
            <para>
            The states of <code>STARTING</code> and <code>STOPPING</code> indicate that the server
            is in an intermediate state, either not fully able to respond, or not fully offline.
            The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an
            error condition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            This property contains the key-value pairs that you can use to search for and group
            servers that were assigned to the server that was described.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.UserCount">
            <summary>
            Gets and sets the property UserCount. 
            <para>
            The number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribedUser">
            <summary>
            Returns properties of the user that you want to describe.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedUser.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            This property contains the unique Amazon Resource Name (ARN) for the user that was
            requested to be described.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedUser.HomeDirectory">
            <summary>
            Gets and sets the property HomeDirectory. 
            <para>
            This property specifies the landing directory (or folder), which is the location that
            files are written to or read from in an Amazon S3 bucket for the described user. An
            example is <code>/<i>bucket_name</i>/home/<i>username</i> </code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedUser.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            Specifies the name of the policy in use for the described user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedUser.Role">
            <summary>
            Gets and sets the property Role. 
            <para>
            This property specifies the IAM role that controls your user's access to your Amazon
            S3 bucket. The policies attached to this role will determine the level of access you
            want to provide your users when transferring files into and out of your Amazon S3
            bucket or buckets. The IAM role should also contain a trust relationship that allows
            the SFTP server to access your resources when servicing your SFTP user's transfer
            requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedUser.SshPublicKeys">
            <summary>
            Gets and sets the property SshPublicKeys. 
            <para>
            This property contains the public key portion of the Secure Shell (SSH) keys stored
            for the described user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedUser.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            This property contains the key-value pairs for the user requested. Tag can be used
            to search for and group users for a variety of purposes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedUser.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            This property is the name of the user that was requested to be described. User names
            are used for authentication purposes. This is the string that will be used by your
            user when they log in to your SFTP server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeServerRequest">
            <summary>
            Container for the parameters to the DescribeServer operation.
            Describes the server that you specify by passing the <code>ServerId</code> parameter.
            
             
            <para>
            The response contains a description of the server's properties.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeServerRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for an SFTP server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeServerResponse">
            <summary>
            This is the response object from the DescribeServer operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeServerResponse.Server">
            <summary>
            Gets and sets the property Server. 
            <para>
            An array containing the properties of the server with the <code>ServerID</code> you
            specified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeUserRequest">
            <summary>
            Container for the parameters to the DescribeUser operation.
            Describes the user assigned to a specific server, as identified by its <code>ServerId</code>
            property.
            
             
            <para>
            The response from this call returns the properties of the user associated with the
            <code>ServerId</code> value that was specified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeUserRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for an SFTP server that has this user assigned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeUserRequest.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            The name of the user assigned to one or more servers. User names are part of the sign-in
            credentials to use the AWS Transfer for SFTP service and perform file transfer tasks.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeUserResponse">
            <summary>
            This is the response object from the DescribeUser operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeUserResponse.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for an SFTP server that has this user assigned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeUserResponse.User">
            <summary>
            Gets and sets the property User. 
            <para>
            An array containing the properties of the user account for the <code>ServerID</code>
            value that you specified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.EndpointDetails">
            <summary>
            The configuration settings for the virtual private cloud (VPC) endpoint for your SFTP
            server.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.EndpointDetails.VpcEndpointId">
            <summary>
            Gets and sets the property VpcEndpointId. 
            <para>
            The ID of the VPC endpoint.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.IdentityProviderDetails">
            <summary>
            Returns information related to the type of user authentication that is in use for
            a server's users. A server can have only one method of authentication.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IdentityProviderDetails.InvocationRole">
            <summary>
            Gets and sets the property InvocationRole. 
            <para>
            The <code>InvocationRole</code> parameter provides the type of <code>InvocationRole</code>
            used to authenticate the user account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IdentityProviderDetails.Url">
            <summary>
            Gets and sets the property Url. 
            <para>
            The <code>Url</code> parameter provides contains the location of the service endpoint
            used to authenticate users.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ImportSshPublicKeyRequest">
            <summary>
            Container for the parameters to the ImportSshPublicKey operation.
            Adds a Secure Shell (SSH) public key to a user account identified by a <code>UserName</code>
            value assigned to a specific server, identified by <code>ServerId</code>.
            
             
            <para>
            The response returns the <code>UserName</code> value, the <code>ServerId</code> value,
            and the name of the <code>SshPublicKeyId</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportSshPublicKeyRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for an SFTP server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportSshPublicKeyRequest.SshPublicKeyBody">
            <summary>
            Gets and sets the property SshPublicKeyBody. 
            <para>
            The public key portion of an SSH key pair.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportSshPublicKeyRequest.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            The name of the user account that is assigned to one or more servers.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ImportSshPublicKeyResponse">
            <summary>
            This response identifies the user, the server they belong to, and the identifier of
            the SSH public key associated with that user. A user can have more than one key on
            each server that they are associated with.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportSshPublicKeyResponse.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for an SFTP server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportSshPublicKeyResponse.SshPublicKeyId">
            <summary>
            Gets and sets the property SshPublicKeyId. 
            <para>
            This identifier is the name given to a public key by the system that was imported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportSshPublicKeyResponse.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            A user name assigned to the <code>ServerID</code> value that you specified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.InternalServiceErrorException">
            <summary>
             Transfer exception
             </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.InternalServiceErrorException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServiceErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Transfer.Model.InternalServiceErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServiceErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.InternalServiceErrorException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServiceErrorException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.InternalServiceErrorException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServiceErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.InternalServiceErrorException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServiceErrorException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateServerRequestMarshaller">
            <summary>
            CreateServer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateServerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateServerRequestMarshaller.Marshall(Amazon.Transfer.Model.CreateServerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateServerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateServerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateServer operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateServerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateServerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateServerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateUserRequestMarshaller">
            <summary>
            CreateUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateUserRequestMarshaller.Marshall(Amazon.Transfer.Model.CreateUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateUser operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteServerRequestMarshaller">
            <summary>
            DeleteServer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteServerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteServerRequestMarshaller.Marshall(Amazon.Transfer.Model.DeleteServerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteServerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteServerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteServer operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteServerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteServerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteServerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteSshPublicKeyRequestMarshaller">
            <summary>
            DeleteSshPublicKey Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteSshPublicKeyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteSshPublicKeyRequestMarshaller.Marshall(Amazon.Transfer.Model.DeleteSshPublicKeyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteSshPublicKeyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteSshPublicKeyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSshPublicKey operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteSshPublicKeyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteSshPublicKeyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteSshPublicKeyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller">
            <summary>
            DeleteUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller.Marshall(Amazon.Transfer.Model.DeleteUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteUser operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedServerUnmarshaller">
            <summary>
            Response Unmarshaller for DescribedServer Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedServerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#DescribedServer,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedServerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedServerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedUserUnmarshaller">
            <summary>
            Response Unmarshaller for DescribedUser Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedUserUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#DescribedUser,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedUserUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedUserUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeServerRequestMarshaller">
            <summary>
            DescribeServer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeServerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeServerRequestMarshaller.Marshall(Amazon.Transfer.Model.DescribeServerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeServerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeServerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeServer operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeServerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeServerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeServerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeUserRequestMarshaller">
            <summary>
            DescribeUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeUserRequestMarshaller.Marshall(Amazon.Transfer.Model.DescribeUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeUser operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.EndpointDetailsMarshaller">
            <summary>
            EndpointDetails Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.EndpointDetailsMarshaller.Marshall(Amazon.Transfer.Model.EndpointDetails,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.EndpointDetailsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.EndpointDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for EndpointDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.EndpointDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#EndpointDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.EndpointDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.EndpointDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.IdentityProviderDetailsMarshaller">
            <summary>
            IdentityProviderDetails Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.IdentityProviderDetailsMarshaller.Marshall(Amazon.Transfer.Model.IdentityProviderDetails,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.IdentityProviderDetailsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.IdentityProviderDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for IdentityProviderDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.IdentityProviderDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#IdentityProviderDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.IdentityProviderDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.IdentityProviderDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportSshPublicKeyRequestMarshaller">
            <summary>
            ImportSshPublicKey Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportSshPublicKeyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportSshPublicKeyRequestMarshaller.Marshall(Amazon.Transfer.Model.ImportSshPublicKeyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportSshPublicKeyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportSshPublicKeyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ImportSshPublicKey operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportSshPublicKeyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportSshPublicKeyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportSshPublicKeyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedServerUnmarshaller">
            <summary>
            Response Unmarshaller for ListedServer Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedServerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#ListedServer,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedServerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedServerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedUserUnmarshaller">
            <summary>
            Response Unmarshaller for ListedUser Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedUserUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#ListedUser,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedUserUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedUserUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListServersRequestMarshaller">
            <summary>
            ListServers Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListServersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListServersRequestMarshaller.Marshall(Amazon.Transfer.Model.ListServersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListServersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListServersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListServers operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListServersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListServersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListServersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Transfer.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller">
            <summary>
            ListUsers Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller.Marshall(Amazon.Transfer.Model.ListUsersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListUsers operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.SshPublicKeyUnmarshaller">
            <summary>
            Response Unmarshaller for SshPublicKey Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.SshPublicKeyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#SshPublicKey,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.SshPublicKeyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.SshPublicKeyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.StartServerRequestMarshaller">
            <summary>
            StartServer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.StartServerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.StartServerRequestMarshaller.Marshall(Amazon.Transfer.Model.StartServerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.StartServerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.StartServerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartServer operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.StartServerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.StartServerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.StartServerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.StopServerRequestMarshaller">
            <summary>
            StopServer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.StopServerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.StopServerRequestMarshaller.Marshall(Amazon.Transfer.Model.StopServerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.StopServerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.StopServerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopServer operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.StopServerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.StopServerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.StopServerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.Transfer.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Transfer.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.TestIdentityProviderRequestMarshaller">
            <summary>
            TestIdentityProvider Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TestIdentityProviderRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TestIdentityProviderRequestMarshaller.Marshall(Amazon.Transfer.Model.TestIdentityProviderRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.TestIdentityProviderRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.TestIdentityProviderResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TestIdentityProvider operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TestIdentityProviderResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TestIdentityProviderResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.TestIdentityProviderResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Transfer.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateServerRequestMarshaller">
            <summary>
            UpdateServer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateServerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateServerRequestMarshaller.Marshall(Amazon.Transfer.Model.UpdateServerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateServerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateServerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateServer operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateServerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateServerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateServerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateUserRequestMarshaller">
            <summary>
            UpdateUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateUserRequestMarshaller.Marshall(Amazon.Transfer.Model.UpdateUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateUser operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.InvalidNextTokenException">
            <summary>
             Transfer exception
             </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.InvalidNextTokenException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidNextTokenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Transfer.Model.InvalidNextTokenException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.InvalidNextTokenException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.InvalidNextTokenException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.InvalidNextTokenException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Transfer.Model.InvalidRequestException">
            <summary>
             Transfer exception
             </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.InvalidRequestException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Transfer.Model.InvalidRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.InvalidRequestException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.InvalidRequestException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.InvalidRequestException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Transfer.Model.ListedServer">
            <summary>
            Returns properties of the server that was specified.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedServer.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The unique Amazon Resource Name (ARN) for the server to be listed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedServer.EndpointType">
            <summary>
            Gets and sets the property EndpointType. 
            <para>
            The type of VPC endpoint that your SFTP server is connected to. If your SFTP server
            is connected to a VPC endpoint, your server isn't accessible over the public internet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedServer.IdentityProviderType">
            <summary>
            Gets and sets the property IdentityProviderType. 
            <para>
            The authentication method used to validate a user for the server that was specified.
            This can include Secure Shell (SSH), user name and password combinations, or your
            own custom authentication method. Valid values include <code>SERVICE_MANAGED</code>
            or <code>API_GATEWAY</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedServer.LoggingRole">
            <summary>
            Gets and sets the property LoggingRole. 
            <para>
            The AWS Identity and Access Management entity that allows the server to turn on Amazon
            CloudWatch logging.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedServer.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            This value is the unique system assigned identifier for the SFTP servers that were
            listed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedServer.State">
            <summary>
            Gets and sets the property State. 
            <para>
            This property describes the condition of the SFTP server for the server that was described.
            A value of <code>ONLINE</code>&gt; indicates that the server can accept jobs and transfer
            files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot
            perform file transfer operations.
            </para>
             
            <para>
            The states of <code>STARTING</code> and <code>STOPPING</code> indicate that the server
            is in an intermediate state, either not fully able to respond, or not fully offline.
            The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an
            error condition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedServer.UserCount">
            <summary>
            Gets and sets the property UserCount. 
            <para>
            This property is a numeric value that indicates the number of users that are assigned
            to the SFTP server you specified with the <code>ServerId</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListedUser">
            <summary>
            Returns properties of the user that you specify.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedUser.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            This property is the unique Amazon Resource Name (ARN) for the user that you want
            to learn about.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedUser.HomeDirectory">
            <summary>
            Gets and sets the property HomeDirectory. 
            <para>
            This value specifies the location that files are written to or read from an Amazon
            S3 bucket for the user you specify by their ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedUser.Role">
            <summary>
            Gets and sets the property Role. 
            <para>
            The role in use by this user. A <i>role</i> is an AWS Identity and Access Management
            (IAM) entity that, in this case, allows the SFTP server to act on a user's behalf.
            It allows the server to inherit the trust relationship that enables that user to perform
            file operations to their Amazon S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedUser.SshPublicKeyCount">
            <summary>
            Gets and sets the property SshPublicKeyCount. 
            <para>
            This value is the number of SSH public keys stored for the user you specified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedUser.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            The name of the user whose ARN was specified. User names are used for authentication
            purposes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListServersRequest">
            <summary>
            Container for the parameters to the ListServers operation.
            Lists the Secure File Transfer Protocol (SFTP) servers that are associated with your
            AWS account.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListServersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Specifies the number of servers to return as a response to the <code>ListServers</code>
            query.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListServersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When additional results are obtained from the <code>ListServers</code> command, a
            <code>NextToken</code> parameter is returned in the output. You can then pass the
            <code>NextToken</code> parameter in a subsequent command to continue listing additional
            servers.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListServersResponse">
            <summary>
            This is the response object from the ListServers operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListServersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When you can get additional results from the <code>ListServers</code> operation, a
            <code>NextToken</code> parameter is returned in the output. In a following command,
            you can pass in the <code>NextToken</code> parameter to continue listing additional
            servers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListServersResponse.Servers">
            <summary>
            Gets and sets the property Servers. 
            <para>
            An array of servers that were listed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Lists all of the tags associated with the Amazon Resource Number (ARN) you specify.
            The resource can be a user, server, or role.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListTagsForResourceRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN
            is an identifier for a specific AWS resource, such as a server, user, or role.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListTagsForResourceRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Specifies the number of tags to return as a response to the <code>ListTagsForResource</code>
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListTagsForResourceRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When you request additional results from the <code>ListTagsForResource</code> operation,
            a <code>NextToken</code> parameter is returned in the input. You can then pass in
            a subsequent command to the <code>NextToken</code> parameter to continue listing additional
            tags.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListTagsForResourceResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            This value is the ARN you specified to list the tags of.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListTagsForResourceResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When you can get additional results from the <code>ListTagsForResource</code> call,
            a <code>NextToken</code> parameter is returned in the output. You can then pass in
            a subsequent command to the <code>NextToken</code> parameter to continue listing additional
            tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pairs that are assigned to a resource, usually for the purpose of grouping
            and searching for items. Tags are metadata that you define.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListUsersRequest">
            <summary>
            Container for the parameters to the ListUsers operation.
            Lists the users for the server that you specify by passing the <code>ServerId</code>
            parameter.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListUsersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Specifies the number of users to return as a response to the <code>ListUsers</code>
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListUsersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code>
            parameter is returned in the output. You can then pass in a subsequent command to
            the <code>NextToken</code> parameter to continue listing additional users.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListUsersRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server
            that has users assigned to it.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListUsersResponse">
            <summary>
            This is the response object from the ListUsers operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListUsersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code>
            parameter is returned in the output. You can then pass in a subsequent command to
            the <code>NextToken</code> parameter to continue listing additional users.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListUsersResponse.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for an SFTP server that the users are assigned
            to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListUsersResponse.Users">
            <summary>
            Gets and sets the property Users. 
            <para>
            Returns the user accounts and their properties for the <code>ServerId</code> value
            that you specify.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ResourceExistsException">
            <summary>
             Transfer exception
             </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.ResourceExistsException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Transfer.Model.ResourceExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ResourceExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ResourceExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ResourceExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Transfer.Model.ResourceNotFoundException">
            <summary>
             Transfer exception
             </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Transfer.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Transfer.Model.ServiceUnavailableException">
            <summary>
             Transfer exception
             </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.ServiceUnavailableException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceUnavailableException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Transfer.Model.ServiceUnavailableException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ServiceUnavailableException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ServiceUnavailableException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ServiceUnavailableException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Transfer.Model.SshPublicKey">
            <summary>
            Provides information about the public Secure Shell (SSH) key that is associated with
            a user account for a specific server (as identified by <code>ServerId</code>). The
            information returned includes the date the key was imported, the public key contents,
            and the public key ID. A user can store more than one SSH public key associated with
            their user name on a specific SFTP server.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.SshPublicKey.DateImported">
            <summary>
            Gets and sets the property DateImported. 
            <para>
            The date that the public key was added to the user account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.SshPublicKey.SshPublicKeyBody">
            <summary>
            Gets and sets the property SshPublicKeyBody. 
            <para>
            The content of the SSH public key as specified by the <code>PublicKeyId</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.SshPublicKey.SshPublicKeyId">
            <summary>
            Gets and sets the property SshPublicKeyId. 
            <para>
            The <code>SshPublicKeyId</code> parameter contains the identifier of the public key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.StartServerRequest">
            <summary>
            Container for the parameters to the StartServer operation.
            Changes the state of a Secure File Transfer Protocol (SFTP) server from <code>OFFLINE</code>
            to <code>ONLINE</code>. It has no impact on an SFTP server that is already <code>ONLINE</code>.
            An <code>ONLINE</code> server can accept and process file transfer jobs.
            
             
            <para>
            The state of <code>STARTING</code> indicates that the server is in an intermediate
            state, either not fully able to respond, or not fully online. The values of <code>START_FAILED</code>
            can indicate an error condition. 
            </para>
             
            <para>
            No response is returned from this call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.StartServerRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for an SFTP server that you start.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.StartServerResponse">
            <summary>
            This is the response object from the StartServer operation.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.StopServerRequest">
            <summary>
            Container for the parameters to the StopServer operation.
            Changes the state of an SFTP server from <code>ONLINE</code> to <code>OFFLINE</code>.
            An <code>OFFLINE</code> server cannot accept and process file transfer jobs. Information
            tied to your server such as server and user properties are not affected by stopping
            your server. Stopping a server will not reduce or impact your Secure File Transfer
            Protocol (SFTP) endpoint billing.
            
             
            <para>
            The state of <code>STOPPING</code> indicates that the server is in an intermediate
            state, either not fully able to respond, or not fully offline. The values of <code>STOP_FAILED</code>
            can indicate an error condition.
            </para>
             
            <para>
            No response is returned from this call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.StopServerRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for an SFTP server that you stopped.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.StopServerResponse">
            <summary>
            This is the response object from the StopServer operation.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.Tag">
            <summary>
            Creates a key-value pair for a specific resource. Tags are metadata that you can use
            to search for and group a resource for various purposes. You can apply tags to servers,
            users, and roles. A tag key can take more than one value. For example, to group servers
            for accounting purposes, you might create a tag called <code>Group</code> and assign
            the values <code>Research</code> and <code>Accounting</code> to that group.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The name assigned to the tag that you create.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            This property contains one or more values that you assigned to the key name you create.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Attaches a key-value pair to a resource, as identified by its Amazon Resource Name
            (ARN). Resources are users, servers, roles, and other entities.
            
             
            <para>
            There is no response returned from this call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TagResourceRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            An Amazon Resource Name (ARN) for a specific AWS resource, such as a server, user,
            or role.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pairs assigned to ARNs that you can use to group and search for resources
            by type. You can attach this metadata to user accounts for any purpose.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.TestIdentityProviderRequest">
            <summary>
            Container for the parameters to the TestIdentityProvider operation.
            If the <code>IdentityProviderType</code> of the server is <code>API_Gateway</code>,
            tests whether your API Gateway is set up successfully. We highly recommend that you
            call this operation to test your authentication method as soon as you create your
            server. By doing so, you can troubleshoot issues with the API Gateway integration
            to ensure that your users can successfully use the service.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TestIdentityProviderRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned identifier for a specific server. That server's user authentication
            method is tested with a user name and password.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TestIdentityProviderRequest.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            This request parameter is the name of the user account to be tested.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TestIdentityProviderRequest.UserPassword">
            <summary>
            Gets and sets the property UserPassword. 
            <para>
            The password of the user account to be tested.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.TestIdentityProviderResponse">
            <summary>
            This is the response object from the TestIdentityProvider operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TestIdentityProviderResponse.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A message that indicates whether the test was successful or not. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TestIdentityProviderResponse.Response">
            <summary>
            Gets and sets the property Response. 
            <para>
            The response that is returned from your API Gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TestIdentityProviderResponse.StatusCode">
            <summary>
            Gets and sets the property StatusCode. 
            <para>
            The HTTP status code that is the response from your API Gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TestIdentityProviderResponse.Url">
            <summary>
            Gets and sets the property Url. 
            <para>
            The endpoint of the service used to authenticate a user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Detaches a key-value pair from a resource, as identified by its Amazon Resource Name
            (ARN). Resources are users, servers, roles, and other entities.
            
             
            <para>
            No response is returned from this call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UntagResourceRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            This is the value of the resource that will have the tag removed. An Amazon Resource
            Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or
            role.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            TagKeys are key-value pairs assigned to ARNs that can be used to group and search
            for resources by type. This metadata can be attached to resources for any purpose.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UpdateServerRequest">
            <summary>
            Container for the parameters to the UpdateServer operation.
            Updates the server properties after that server has been created.
            
             
            <para>
            The <code>UpdateServer</code> call returns the <code>ServerId</code> of the Secure
            File Transfer Protocol (SFTP) server you updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateServerRequest.EndpointDetails">
            <summary>
            Gets and sets the property EndpointDetails. 
            <para>
            The virtual private cloud (VPC) endpoint settings that are configured for your SFTP
            server. With a VPC endpoint, your SFTP server isn't accessible over the public internet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateServerRequest.EndpointType">
            <summary>
            Gets and sets the property EndpointType. 
            <para>
            The type of endpoint that you want your SFTP server to connect to. You can choose
            to connect to the public internet or a virtual private cloud (VPC) endpoint. With
            a VPC endpoint, your SFTP server isn't accessible over the public internet. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateServerRequest.HostKey">
            <summary>
            Gets and sets the property HostKey. 
            <para>
            The RSA private key as generated by <code>ssh-keygen -N "" -f my-new-server-key</code>.
            </para>
             <important> 
            <para>
            If you aren't planning to migrate existing users from an existing SFTP server to a
            new AWS SFTP server, don't update the host key. Accidentally changing a server's host
            key can be disruptive.
            </para>
             </important> 
            <para>
             For more information, see "https://docs.aws.amazon.com/transfer/latest/userguide/configuring-servers.html#change-host-key"
            in the <i>AWS SFTP User Guide.</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateServerRequest.IdentityProviderDetails">
            <summary>
            Gets and sets the property IdentityProviderDetails. 
            <para>
            This response parameter is an array containing all of the information required to
            call a customer's authentication API method.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateServerRequest.LoggingRole">
            <summary>
            Gets and sets the property LoggingRole. 
            <para>
            A value that changes the AWS Identity and Access Management (IAM) role that allows
            Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateServerRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for an SFTP server instance that the user account
            is assigned to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UpdateServerResponse">
            <summary>
            This is the response object from the UpdateServer operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateServerResponse.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for an SFTP server that the user account is assigned
            to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UpdateUserRequest">
            <summary>
            Container for the parameters to the UpdateUser operation.
            Assigns new properties to a user. Parameters you pass modify any or all of the following:
            the home directory, role, and policy for the <code>UserName</code> and <code>ServerId</code>
            you specify.
            
             
            <para>
            The response returns the <code>ServerId</code> and the <code>UserName</code> for the
            updated user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateUserRequest.HomeDirectory">
            <summary>
            Gets and sets the property HomeDirectory. 
            <para>
            A parameter that specifies the landing directory (folder) for a user when they log
            in to the server using their client. An example is <code>/home/<i>username</i> </code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateUserRequest.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            Allows you to supply a scope-down policy for your user so you can use the same AWS
            Identity and Access Management (IAM) role across multiple users. The policy scopes
            down user access to portions of your Amazon S3 bucket. Variables you can use inside
            this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>,
            and <code>${Transfer:HomeBucket}</code>.
            </para>
             <note> 
            <para>
            For scope-down policies, AWS Transfer for SFTP stores the policy as a JSON blob, instead
            of the Amazon Resource Name (ARN) of the policy. You save the policy as a JSON blob
            and pass it in the <code>Policy</code> argument.
            </para>
             
            <para>
            For an example of a scope-down policy, see "https://docs.aws.amazon.com/transfer/latest/userguide/users.html#users-policies-scope-down"&gt;Creating
            a Scope-Down Policy.
            </para>
             
            <para>
            For more information, see "https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html"
            in the <i>AWS Security Token Service API Reference</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateUserRequest.Role">
            <summary>
            Gets and sets the property Role. 
            <para>
            The IAM role that controls your user's access to your Amazon S3 bucket. The policies
            attached to this role will determine the level of access you want to provide your
            users when transferring files into and out of your Amazon S3 bucket or buckets. The
            IAM role should also contain a trust relationship that allows the Secure File Transfer
            Protocol (SFTP) server to access your resources when servicing your SFTP user's transfer
            requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateUserRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for an SFTP server instance that the user account
            is assigned to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateUserRequest.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            A unique string that identifies a user and is associated with a server as specified
            by the <code>ServerId</code>. This is the string that will be used by your user when
            they log in to your SFTP server. This user name is a minimum of 3 and a maximum of
            32 characters long. The following are valid characters: a-z, A-Z, 0-9, underscore,
            and hyphen. The user name can't start with a hyphen.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UpdateUserResponse">
            <summary>
            <code>UpdateUserResponse</code> returns the user name and server identifier for the
            request to update a user's properties.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateUserResponse.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for an SFTP server instance that the user account
            is assigned to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateUserResponse.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            The unique identifier for a user that is assigned to the SFTP server instance that
            was specified in the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.EndpointType">
            <summary>
            Constants used for properties of type EndpointType.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.EndpointType.PUBLIC">
            <summary>
            Constant PUBLIC for EndpointType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.EndpointType.VPC_ENDPOINT">
            <summary>
            Constant VPC_ENDPOINT for EndpointType
            </summary>
        </member>
        <member name="M:Amazon.Transfer.EndpointType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.EndpointType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.EndpointType.op_Implicit(System.String)~Amazon.Transfer.EndpointType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.IdentityProviderType">
            <summary>
            Constants used for properties of type IdentityProviderType.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.IdentityProviderType.API_GATEWAY">
            <summary>
            Constant API_GATEWAY for IdentityProviderType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.IdentityProviderType.SERVICE_MANAGED">
            <summary>
            Constant SERVICE_MANAGED for IdentityProviderType
            </summary>
        </member>
        <member name="M:Amazon.Transfer.IdentityProviderType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.IdentityProviderType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.IdentityProviderType.op_Implicit(System.String)~Amazon.Transfer.IdentityProviderType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.State">
            <summary>
            Constants used for properties of type State.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.State.OFFLINE">
            <summary>
            Constant OFFLINE for State
            </summary>
        </member>
        <member name="F:Amazon.Transfer.State.ONLINE">
            <summary>
            Constant ONLINE for State
            </summary>
        </member>
        <member name="F:Amazon.Transfer.State.START_FAILED">
            <summary>
            Constant START_FAILED for State
            </summary>
        </member>
        <member name="F:Amazon.Transfer.State.STARTING">
            <summary>
            Constant STARTING for State
            </summary>
        </member>
        <member name="F:Amazon.Transfer.State.STOP_FAILED">
            <summary>
            Constant STOP_FAILED for State
            </summary>
        </member>
        <member name="F:Amazon.Transfer.State.STOPPING">
            <summary>
            Constant STOPPING for State
            </summary>
        </member>
        <member name="M:Amazon.Transfer.State.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.State.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.State.op_Implicit(System.String)~Amazon.Transfer.State">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.AmazonTransferClient">
             <summary>
             Implementation for accessing Transfer
            
             AWS Transfer for SFTP is a fully managed service that enables the transfer of files
             directly into and out of Amazon S3 using the Secure File Transfer Protocol (SFTP)—also
             known as Secure Shell (SSH) File Transfer Protocol. AWS helps you seamlessly migrate
             your file transfer workflows to AWS Transfer for SFTP—by integrating with existing
             authentication systems, and providing DNS routing with Amazon Route 53—so nothing
             changes for your customers and partners, or their applications. With your data in
             S3, you can use it with AWS services for processing, analytics, machine learning,
             and archiving. Getting started with AWS Transfer for SFTP (AWS SFTP) is easy; there
             is no infrastructure to buy and set up.
             </summary>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor">
             <summary>
             Constructs AmazonTransferClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonTransferClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor(Amazon.Transfer.AmazonTransferConfig)">
             <summary>
             Constructs AmazonTransferClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonTransferClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonTransferClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonTransferClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.Transfer.AmazonTransferConfig)">
            <summary>
            Constructs AmazonTransferClient with AWS Credentials and an
            AmazonTransferClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonTransferClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonTransferClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonTransferClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor(System.String,System.String,Amazon.Transfer.AmazonTransferConfig)">
            <summary>
            Constructs AmazonTransferClient with AWS Access Key ID, AWS Secret Key and an
            AmazonTransferClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonTransferClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonTransferClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonTransferClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor(System.String,System.String,System.String,Amazon.Transfer.AmazonTransferConfig)">
            <summary>
            Constructs AmazonTransferClient with AWS Access Key ID, AWS Secret Key and an
            AmazonTransferClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonTransferClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.AmazonTransferClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.CreateServerAsync(Amazon.Transfer.Model.CreateServerRequest,System.Threading.CancellationToken)">
            <summary>
            Instantiates an autoscaling virtual server based on Secure File Transfer Protocol
            (SFTP) in AWS. When you make updates to your server or when you work with users, use
            the service-generated <code>ServerId</code> property that is assigned to the newly
            created server.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/CreateServer">REST API Reference for CreateServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.CreateUserAsync(Amazon.Transfer.Model.CreateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a user and associates them with an existing Secure File Transfer Protocol
            (SFTP) server. You can only create and associate users with SFTP servers that have
            the <code>IdentityProviderType</code> set to <code>SERVICE_MANAGED</code>. Using parameters
            for <code>CreateUser</code>, you can specify the user name, set the home directory,
            store the user's public key, and assign the user's AWS Identity and Access Management
            (IAM) role. You can also optionally add a scope-down policy, and assign metadata with
            tags that can be used to group and search for users.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateUser service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/CreateUser">REST API Reference for CreateUser Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DeleteServerAsync(Amazon.Transfer.Model.DeleteServerRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the Secure File Transfer Protocol (SFTP) server that you specify.
            
             
            <para>
            No response returns from this operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteServer">REST API Reference for DeleteServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DeleteSshPublicKeyAsync(Amazon.Transfer.Model.DeleteSshPublicKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a user's Secure Shell (SSH) public key.
            
             
            <para>
            No response is returned from this operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSshPublicKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSshPublicKey service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteSshPublicKey">REST API Reference for DeleteSshPublicKey Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DeleteUserAsync(Amazon.Transfer.Model.DeleteUserRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the user belonging to the server you specify.
            
             
            <para>
            No response returns from this operation.
            </para>
             <note> 
            <para>
            When you delete a user from a server, the user's information is lost.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteUser service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteUser">REST API Reference for DeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DescribeServerAsync(Amazon.Transfer.Model.DescribeServerRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the server that you specify by passing the <code>ServerId</code> parameter.
            
             
            <para>
            The response contains a description of the server's properties.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeServer">REST API Reference for DescribeServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DescribeUserAsync(Amazon.Transfer.Model.DescribeUserRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the user assigned to a specific server, as identified by its <code>ServerId</code>
            property.
            
             
            <para>
            The response from this call returns the properties of the user associated with the
            <code>ServerId</code> value that was specified.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeUser service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeUser">REST API Reference for DescribeUser Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.ImportSshPublicKeyAsync(Amazon.Transfer.Model.ImportSshPublicKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Adds a Secure Shell (SSH) public key to a user account identified by a <code>UserName</code>
            value assigned to a specific server, identified by <code>ServerId</code>.
            
             
            <para>
            The response returns the <code>UserName</code> value, the <code>ServerId</code> value,
            and the name of the <code>SshPublicKeyId</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportSshPublicKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ImportSshPublicKey service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ImportSshPublicKey">REST API Reference for ImportSshPublicKey Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.ListServersAsync(Amazon.Transfer.Model.ListServersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the Secure File Transfer Protocol (SFTP) servers that are associated with your
            AWS account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListServers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListServers service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListServers">REST API Reference for ListServers Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.ListTagsForResourceAsync(Amazon.Transfer.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all of the tags associated with the Amazon Resource Number (ARN) you specify.
            The resource can be a user, server, or role.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.ListUsersAsync(Amazon.Transfer.Model.ListUsersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the users for the server that you specify by passing the <code>ServerId</code>
            parameter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUsers service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListUsers">REST API Reference for ListUsers Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.StartServerAsync(Amazon.Transfer.Model.StartServerRequest,System.Threading.CancellationToken)">
            <summary>
            Changes the state of a Secure File Transfer Protocol (SFTP) server from <code>OFFLINE</code>
            to <code>ONLINE</code>. It has no impact on an SFTP server that is already <code>ONLINE</code>.
            An <code>ONLINE</code> server can accept and process file transfer jobs.
            
             
            <para>
            The state of <code>STARTING</code> indicates that the server is in an intermediate
            state, either not fully able to respond, or not fully online. The values of <code>START_FAILED</code>
            can indicate an error condition. 
            </para>
             
            <para>
            No response is returned from this call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/StartServer">REST API Reference for StartServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.StopServerAsync(Amazon.Transfer.Model.StopServerRequest,System.Threading.CancellationToken)">
            <summary>
            Changes the state of an SFTP server from <code>ONLINE</code> to <code>OFFLINE</code>.
            An <code>OFFLINE</code> server cannot accept and process file transfer jobs. Information
            tied to your server such as server and user properties are not affected by stopping
            your server. Stopping a server will not reduce or impact your Secure File Transfer
            Protocol (SFTP) endpoint billing.
            
             
            <para>
            The state of <code>STOPPING</code> indicates that the server is in an intermediate
            state, either not fully able to respond, or not fully offline. The values of <code>STOP_FAILED</code>
            can indicate an error condition.
            </para>
             
            <para>
            No response is returned from this call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/StopServer">REST API Reference for StopServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.TagResourceAsync(Amazon.Transfer.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Attaches a key-value pair to a resource, as identified by its Amazon Resource Name
            (ARN). Resources are users, servers, roles, and other entities.
            
             
            <para>
            There is no response returned from this call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.TestIdentityProviderAsync(Amazon.Transfer.Model.TestIdentityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            If the <code>IdentityProviderType</code> of the server is <code>API_Gateway</code>,
            tests whether your API Gateway is set up successfully. We highly recommend that you
            call this operation to test your authentication method as soon as you create your
            server. By doing so, you can troubleshoot issues with the API Gateway integration
            to ensure that your users can successfully use the service.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TestIdentityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TestIdentityProvider service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/TestIdentityProvider">REST API Reference for TestIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.UntagResourceAsync(Amazon.Transfer.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Detaches a key-value pair from a resource, as identified by its Amazon Resource Name
            (ARN). Resources are users, servers, roles, and other entities.
            
             
            <para>
            No response is returned from this call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.UpdateServerAsync(Amazon.Transfer.Model.UpdateServerRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the server properties after that server has been created.
            
             
            <para>
            The <code>UpdateServer</code> call returns the <code>ServerId</code> of the Secure
            File Transfer Protocol (SFTP) server you updated.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UpdateServer">REST API Reference for UpdateServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.UpdateUserAsync(Amazon.Transfer.Model.UpdateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Assigns new properties to a user. Parameters you pass modify any or all of the following:
            the home directory, role, and policy for the <code>UserName</code> and <code>ServerId</code>
            you specify.
            
             
            <para>
            The response returns the <code>ServerId</code> and the <code>UserName</code> for the
            updated user.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateUser service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UpdateUser">REST API Reference for UpdateUser Operation</seealso>
        </member>
        <member name="T:Amazon.Transfer.IAmazonTransfer">
             <summary>
             Interface for accessing Transfer
            
             AWS Transfer for SFTP is a fully managed service that enables the transfer of files
             directly into and out of Amazon S3 using the Secure File Transfer Protocol (SFTP)—also
             known as Secure Shell (SSH) File Transfer Protocol. AWS helps you seamlessly migrate
             your file transfer workflows to AWS Transfer for SFTP—by integrating with existing
             authentication systems, and providing DNS routing with Amazon Route 53—so nothing
             changes for your customers and partners, or their applications. With your data in
             S3, you can use it with AWS services for processing, analytics, machine learning,
             and archiving. Getting started with AWS Transfer for SFTP (AWS SFTP) is easy; there
             is no infrastructure to buy and set up.
             </summary>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.CreateServerAsync(Amazon.Transfer.Model.CreateServerRequest,System.Threading.CancellationToken)">
            <summary>
            Instantiates an autoscaling virtual server based on Secure File Transfer Protocol
            (SFTP) in AWS. When you make updates to your server or when you work with users, use
            the service-generated <code>ServerId</code> property that is assigned to the newly
            created server.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/CreateServer">REST API Reference for CreateServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.CreateUserAsync(Amazon.Transfer.Model.CreateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a user and associates them with an existing Secure File Transfer Protocol
            (SFTP) server. You can only create and associate users with SFTP servers that have
            the <code>IdentityProviderType</code> set to <code>SERVICE_MANAGED</code>. Using parameters
            for <code>CreateUser</code>, you can specify the user name, set the home directory,
            store the user's public key, and assign the user's AWS Identity and Access Management
            (IAM) role. You can also optionally add a scope-down policy, and assign metadata with
            tags that can be used to group and search for users.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateUser service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/CreateUser">REST API Reference for CreateUser Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DeleteServerAsync(Amazon.Transfer.Model.DeleteServerRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the Secure File Transfer Protocol (SFTP) server that you specify.
            
             
            <para>
            No response returns from this operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteServer">REST API Reference for DeleteServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DeleteSshPublicKeyAsync(Amazon.Transfer.Model.DeleteSshPublicKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a user's Secure Shell (SSH) public key.
            
             
            <para>
            No response is returned from this operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSshPublicKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSshPublicKey service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteSshPublicKey">REST API Reference for DeleteSshPublicKey Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DeleteUserAsync(Amazon.Transfer.Model.DeleteUserRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the user belonging to the server you specify.
            
             
            <para>
            No response returns from this operation.
            </para>
             <note> 
            <para>
            When you delete a user from a server, the user's information is lost.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteUser service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteUser">REST API Reference for DeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DescribeServerAsync(Amazon.Transfer.Model.DescribeServerRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the server that you specify by passing the <code>ServerId</code> parameter.
            
             
            <para>
            The response contains a description of the server's properties.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeServer">REST API Reference for DescribeServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DescribeUserAsync(Amazon.Transfer.Model.DescribeUserRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the user assigned to a specific server, as identified by its <code>ServerId</code>
            property.
            
             
            <para>
            The response from this call returns the properties of the user associated with the
            <code>ServerId</code> value that was specified.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeUser service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeUser">REST API Reference for DescribeUser Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.ImportSshPublicKeyAsync(Amazon.Transfer.Model.ImportSshPublicKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Adds a Secure Shell (SSH) public key to a user account identified by a <code>UserName</code>
            value assigned to a specific server, identified by <code>ServerId</code>.
            
             
            <para>
            The response returns the <code>UserName</code> value, the <code>ServerId</code> value,
            and the name of the <code>SshPublicKeyId</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportSshPublicKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ImportSshPublicKey service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ImportSshPublicKey">REST API Reference for ImportSshPublicKey Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.ListServersAsync(Amazon.Transfer.Model.ListServersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the Secure File Transfer Protocol (SFTP) servers that are associated with your
            AWS account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListServers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListServers service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListServers">REST API Reference for ListServers Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.ListTagsForResourceAsync(Amazon.Transfer.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all of the tags associated with the Amazon Resource Number (ARN) you specify.
            The resource can be a user, server, or role.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.ListUsersAsync(Amazon.Transfer.Model.ListUsersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the users for the server that you specify by passing the <code>ServerId</code>
            parameter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUsers service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListUsers">REST API Reference for ListUsers Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.StartServerAsync(Amazon.Transfer.Model.StartServerRequest,System.Threading.CancellationToken)">
            <summary>
            Changes the state of a Secure File Transfer Protocol (SFTP) server from <code>OFFLINE</code>
            to <code>ONLINE</code>. It has no impact on an SFTP server that is already <code>ONLINE</code>.
            An <code>ONLINE</code> server can accept and process file transfer jobs.
            
             
            <para>
            The state of <code>STARTING</code> indicates that the server is in an intermediate
            state, either not fully able to respond, or not fully online. The values of <code>START_FAILED</code>
            can indicate an error condition. 
            </para>
             
            <para>
            No response is returned from this call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/StartServer">REST API Reference for StartServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.StopServerAsync(Amazon.Transfer.Model.StopServerRequest,System.Threading.CancellationToken)">
            <summary>
            Changes the state of an SFTP server from <code>ONLINE</code> to <code>OFFLINE</code>.
            An <code>OFFLINE</code> server cannot accept and process file transfer jobs. Information
            tied to your server such as server and user properties are not affected by stopping
            your server. Stopping a server will not reduce or impact your Secure File Transfer
            Protocol (SFTP) endpoint billing.
            
             
            <para>
            The state of <code>STOPPING</code> indicates that the server is in an intermediate
            state, either not fully able to respond, or not fully offline. The values of <code>STOP_FAILED</code>
            can indicate an error condition.
            </para>
             
            <para>
            No response is returned from this call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/StopServer">REST API Reference for StopServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.TagResourceAsync(Amazon.Transfer.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Attaches a key-value pair to a resource, as identified by its Amazon Resource Name
            (ARN). Resources are users, servers, roles, and other entities.
            
             
            <para>
            There is no response returned from this call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.TestIdentityProviderAsync(Amazon.Transfer.Model.TestIdentityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            If the <code>IdentityProviderType</code> of the server is <code>API_Gateway</code>,
            tests whether your API Gateway is set up successfully. We highly recommend that you
            call this operation to test your authentication method as soon as you create your
            server. By doing so, you can troubleshoot issues with the API Gateway integration
            to ensure that your users can successfully use the service.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TestIdentityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TestIdentityProvider service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/TestIdentityProvider">REST API Reference for TestIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.UntagResourceAsync(Amazon.Transfer.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Detaches a key-value pair from a resource, as identified by its Amazon Resource Name
            (ARN). Resources are users, servers, roles, and other entities.
            
             
            <para>
            No response is returned from this call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.UpdateServerAsync(Amazon.Transfer.Model.UpdateServerRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the server properties after that server has been created.
            
             
            <para>
            The <code>UpdateServer</code> call returns the <code>ServerId</code> of the Secure
            File Transfer Protocol (SFTP) server you updated.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UpdateServer">REST API Reference for UpdateServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.UpdateUserAsync(Amazon.Transfer.Model.UpdateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Assigns new properties to a user. Parameters you pass modify any or all of the following:
            the home directory, role, and policy for the <code>UserName</code> and <code>ServerId</code>
            you specify.
            
             
            <para>
            The response returns the <code>ServerId</code> and the <code>UserName</code> for the
            updated user.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateUser service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the AWS Transfer for SFTP service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the AWS Transfer for SFTP
            service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the AWS Transfer for SFTP service is not available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UpdateUser">REST API Reference for UpdateUser Operation</seealso>
        </member>
    </members>
</doc>
